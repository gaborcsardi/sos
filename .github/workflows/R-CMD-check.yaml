# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest, r: 'oldrel-1'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RGL_USE_NULL: true
      R_KEEP_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-tinytex@v1

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/setup-r-packages@v2
        with:
          upload-snapshots: true

      - name: Install tikz.tex and ks
        run: |
          install.packages('tinytex') # Maybe tinytex is already there?
          tinytex::parse_install(
             text = "! LaTeX Error: File `tikz.sty' not found."
          )
          tinytex::parse_install(
             text = "! LaTeX Error: File `fancyhdr.sty' not found."
          )
          tinytex::parse_install(
             text = "! LaTeX Error: File `pslatex.sty' not found."
          )
          tinytex::parse_install(
             text = "! LaTeX Error: File `grfext.sty' not found."
          )
          tinytex::parse_install(
             text = "LaTeX errors: ! Font T1/ppl/m/n/10=pplr8t at 10.0pt not loadable: Metric (TFM) file not found"
          )
          tinytex::parse_install(
             text = "!pdfTeX error: pdflatex.exe (file ucrr8a.pfb): cannot open Type 1 font file for reading"
          )
          tinytex::parse_install(
             text = "LaTeX errors: ! Font OML/zplm/m/it/10=zplmr7m at 10.0pt not loadable: Metric (TFM) file not found."
          )
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          install.packages('ks')
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
          RSPM: ${{ matrix.config.rspm }}
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
          RGL_USE_NULL: true
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
